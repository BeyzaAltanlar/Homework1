/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package HOMEWORK1.app;

import HOMEWORK1.list.LinkedList;

import static HOMEWORK1.utilities.StringUtils.join;
import static HOMEWORK1.utilities.StringUtils.split;

import java.util.ArrayList;

import static HOMEWORK1.app.MessageUtils.getMessage;

import org.apache.commons.text.WordUtils;

public class App {
    public static void main(String[] args) {
        LinkedList tokens;
        tokens = split(getMessage());
        String result = join(tokens);
        System.out.println(WordUtils.capitalize(result));
        /*ArrayList<Integer> a=new ArrayList<Integer>();
        a.add(1);
        a.add(2);
        a.add(4);
        a.add(5);
        sort(a,"Reverse Sort",3,1,true);
        for (Integer i : a) {
            System.out.println(i);*/

    }


    public static ArrayList<Integer> sort (ArrayList <Integer> arraylist, String sortOrReversesort, int elementForAdd, int elementForRemove, boolean onlySort ) { 
	    
        if(onlySort==true) { 
            for (int i = 0; i < arraylist.size(); i++) {

                for (int j = arraylist.size() - 1; j > i; j--) {
                    if (arraylist.get(i) > arraylist.get(j)) {

                        int tmp = arraylist.get(i);
                        arraylist.set(i,arraylist.get(j)) ;
                        arraylist.set(j,tmp);

                    }

                }

            }
            
        }
        else {
        if(sortOrReversesort.equals("Sort")) {
            for (int i = 0; i < arraylist.size(); i++) {

                for (int j = arraylist.size() - 1; j > i; j--) {
                    if (arraylist.get(i) > arraylist.get(j)) {

                        int tmp = arraylist.get(i);
                        arraylist.set(i,arraylist.get(j)) ;
                        arraylist.set(j,tmp);

                    }

                }

            }

        }
        if(sortOrReversesort.equals("Reverse Sort")){
            

            for(int i = 0, j = arraylist.size() - 1; i < j; i++) {
                arraylist.add(i, arraylist.remove(j));
            }

        }
        
        
      
        arraylist.remove(new Integer (elementForRemove));//sil
        arraylist.add(elementForAdd);//ekle
    }
        
        
        return arraylist;
        
        
        
        }



    }


